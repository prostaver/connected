"""initial script

Revision ID: 09f35182cdff
Revises: 
Create Date: 2022-07-22 11:53:33.824664

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '09f35182cdff'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('genders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=6), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=10), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=False),
    sa.Column('middle_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=False),
    sa.Column('address', sa.Text(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('contact_no', sa.String(length=255), nullable=True),
    sa.Column('password', sa.Text(), nullable=False),
    sa.Column('user_type_id', sa.Integer(), nullable=True),
    sa.Column('gender_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['gender_id'], ['genders.id'], ),
    sa.ForeignKeyConstraint(['user_type_id'], ['user_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('applicant_details',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employer_details',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('company_name', sa.String(length=255), nullable=False),
    sa.Column('company_description', sa.Text(), nullable=True),
    sa.Column('company_website', sa.String(length=255), nullable=True),
    sa.Column('company_logo', sa.String(length=255), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('applicant_qualifications',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('details', sa.Text(), nullable=False),
    sa.Column('acquirement_date', sa.DateTime(), nullable=True),
    sa.Column('applicant_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['applicant_id'], ['applicant_details.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employment_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('company_name', sa.String(length=255), nullable=True),
    sa.Column('position', sa.String(length=255), nullable=False),
    sa.Column('tenure', sa.String(length=255), nullable=False),
    sa.Column('is_current', sa.Boolean(), nullable=True),
    sa.Column('applicant_id', sa.Integer(), nullable=True),
    sa.Column('employer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['applicant_id'], ['applicant_details.id'], ),
    sa.ForeignKeyConstraint(['employer_id'], ['employer_details.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('job_positions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('salary', sa.Numeric(precision=11, scale=4), nullable=True),
    sa.Column('employer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['employer_id'], ['employer_details.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    # Adding Default Data
    op.execute("insert into genders values (1, 'Male'), (2, 'Female')")
    op.execute("insert into user_types values (1, 'Employer'), (2, 'Applicant')")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('job_positions')
    op.drop_table('employment_logs')
    op.drop_table('applicant_qualifications')
    op.drop_table('employer_details')
    op.drop_table('applicant_details')
    op.drop_table('users')
    op.drop_table('user_types')
    op.drop_table('genders')
    # ### end Alembic commands ###
